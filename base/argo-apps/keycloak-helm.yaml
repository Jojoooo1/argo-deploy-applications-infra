apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: keycloak
  namespace: argocd

  # Add this finalizer ONLY if you want these to cascade delete (A cascade delete, deletes both the app and its resources, rather than only the app.)
  # finalizers:
  #   - resources-finalizer.argocd.argoproj.io
  
spec:
  project: default
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      
  source:
    chart: keycloak
    repoURL: https://charts.bitnami.com/bitnami
    targetRevision: 16.1.4

    # https://github.com/bitnami/charts/tree/main/bitnami/keycloak
    helm:
      valuesObject:
        ## Resources ##
        resources:
          requests:
            cpu: 512m
            memory: 3Gi
          limits:
            # cpu: without limit
            memory: 3Gi

        ## Configuration ##
        extraEnvVars:
          - name: JAVA_OPTS
            # Update default JAVA_OPTS from 22.0.3: https://github.com/keycloak/keycloak/blob/b99eb52cee6b0da081b7a1ba9c562deae55b5da0/quarkus/dist/src/main/content/bin/kc.sh#L90
            # to use MinRAMPercentage/MaxRAMPercentage instead of Xms/Xmx
            value: "-XX:MinRAMPercentage=60.0 -XX:MaxRAMPercentage=75.0 -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.err.encoding=UTF-8 -Dstdout.encoding=UTF-8 -Dstderr.encoding=UTF-8 -XX:+ExitOnOutOfMemoryError -Djava.security.egd=file:/dev/urandom -XX:+UseParallelGC -XX:MinHeapFreeRatio=10 -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90"
        
        ## Mode ##
        production: true
        proxy: edge

        ## Replica ##
        autoscaling:
          enabled: true
          minReplicas: 1
          maxReplicas: 2
          targetMemory: 85
        pdb:
          create: true

        ## Monitoring ##
        metrics:
          enabled: true
          serviceMonitor:
            enabled: true
            namespace: keycloak
            labels:
              prometheus.io/scrap-with: kube-prometheus-stack
            # used for keycloak grafana dashboard.
            relabelings:
              - sourceLabels: [__meta_kubernetes_pod_container_name]
                targetLabel: job
          endpoints:
          - path: /metrics
          - path: /realms/master/metrics


        ## Auth ##
        auth:
          adminUser: admin
          existingSecret: keycloak-secrets
        extraEnvVarsSecret: keycloak-secrets

        extraDeploy:
          - |
            apiVersion: v1
            kind: Secret
            metadata:
              name: keycloak-secrets
              namespace: keycloak
            stringData:
              admin-password: password              

        ## Database ##
        postgresql:
          auth:
            database: keycloak
            postgresPassword: password
            username: admin
            password: password

        ## Network ##
        service: 
          type: ClusterIP
        ingress:
          enabled: true
          ingressClassName: nginx
          hostname: identity.local.com.br
          tls: true
          extraTls:
          - secretName: keycloak-tls
            hosts:
            - identity.local.com.br
          annotations:
            nginx.ingress.kubernetes.io/proxy-buffer-size: "128k" # A common issue with Keycloak and nginx is that the proxy buffer may be too small for what Keycloak is trying to send. This will result in a Bad Gateway (502) error.
            nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
            nginx.ingress.kubernetes.io/server-snippet: |
              # Restrict Index
              location = "/" {
                deny all;
                return 404;
              }

              # Restrict Metrics API
              location /metrics {
                  return 403;
              }

              # Restrict Admin console
              # location /admin {
              #   deny all;
              #   return 403;
              # }

        ## Plugins ##
        initContainers: |
          - name: download-kc-plugins
            image: alpine:3.18.3
            command:
              - sh
            args:
              - -c
              - |
                wget https://github.com/aerogear/keycloak-metrics-spi/releases/download/4.0.0/keycloak-metrics-spi-4.0.0.jar -O /providers/keycloak-metrics-spi.jar
                chmod +x /providers/keycloak-metrics-spi.jar
                touch /providers/keycloak-metrics-spi.jar.dodeploy

            volumeMounts:
              - name: providers
                mountPath: /providers

        extraVolumeMounts:
          - name: providers
            mountPath: /opt/bitnami/keycloak/providers

        extraVolumes: |
          - name: providers
            emptyDir: {}

  destination:
    server: "https://kubernetes.default.svc"
    namespace: keycloak
